@page "/"
@using Microsoft.AspNetCore.Components.Web
@namespace BlazorVirtualization.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="BlazorVirtualization.styles.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="favicon.png"/>
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script>
        window.getElementWidth = (elementId) => {
            const element = document.getElementById(elementId);
            return element ? element.offsetWidth : 0;
        };
        window.observeElementWidth = (elementId, dotNetHelper) => {
            const element = document.getElementById(elementId);
            if (element) {
                const resizeObserver = new ResizeObserver(entries => {
                    for (let entry of entries) {
                        console.info(entry.contentRect.width);
                        dotNetHelper.invokeMethodAsync('OnElementWidthChanged', entry.contentRect.width);
                    }
                });
                resizeObserver.observe(element);
            }
        };
    </script>
</body>
</html>
